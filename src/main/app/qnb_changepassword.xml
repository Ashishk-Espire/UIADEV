<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<flow name="qnb_changepasswordFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="${uia.http.basepath}/${http.path.qnb.changepassword}" doc:name="HTTP" />
		<json:validate-schema schemaLocation="/JsonSchema/changePassword.schema.json"
			doc:name="Validate JSON Schema" />
		<set-payload value="#[payload]" mimeType="application/json"
			doc:name="Set Payload" />
		<set-variable variableName="newpassword" value="#[json:newpassword]"
			doc:name="newpassword" />
		<set-variable variableName="username" value="#[json:username]"
			doc:name="username" />
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	username : payload.username,
	password : payload.oldpassword
}]]></dw:set-payload>
		</dw:transform-message>
		<flow-ref name="qnb_validateUserPasswordSub_Flow" doc:name="qnb_validateUserPasswordSub_Flow" />
		<set-variable variableName="validlogin"
			value="#[json:call_validate_user_pwd/Valid]" doc:name="validlogin" />
		<choice doc:name="Choice">
			<when expression="#[flowVars.validlogin == &quot;1&quot; ]">
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"username" : flowVars.username,
	"password" : flowVars.newpassword
}]]></dw:set-payload>
				</dw:transform-message>
				<flow-ref name="qnb_updatePasswordFlow" doc:name="qnb_updatePasswordFlow" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{   
	"status":"failure" , "error":"username and oldpassword mismatch"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>

	<flow name="qnb_updatePasswordFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="${uia.http.basepath}/${http.path.qnb.updatepassword}"
			allowedMethods="POST" doc:name="HTTP" />
		<json:validate-schema schemaLocation="/JsonSchema/updatePassword.schema.json"
			doc:name="Validate JSON Schema" />
		<json:json-to-object-transformer
			returnClass="java.lang.Object" doc:name="JSON to Object" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="originalPayload" />
		<set-variable variableName="email" value="#[payload.username]"
			doc:name="email" />
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"
				file="qnb_loginScript/SHA256.groovy">
				<property key="inputpassword" value="#[payload.password]" />
			</scripting:script>
		</scripting:component>
		<set-variable variableName="encryptedPassword" value="#[payload]"
			doc:name="encryptedPassword" />
		<set-variable variableName="updatepasswordfunction"
			value="{&quot;function&quot;: &quot;tia_mule.update_pwd&quot;, &quot;args&quot; :{&quot;email_address&quot; : &quot;#[flowVars.email]&quot;,&quot;hash&quot; : &quot;#[flowVars.encryptedPassword]&quot;}}"
			doc:name="updatepasswordfunction" />

		<transactional action="ALWAYS_BEGIN" doc:name="Transactional">
			<db:stored-procedure config-ref="TIADB_Oracle_Configuration"
				doc:name="Database">
				<db:parameterized-query><![CDATA[{:fncResult = call APPS.apps_core.dispatch_clob(:inputJSON,'MULE')}]]></db:parameterized-query>
				<db:in-param name="inputJSON" type="VARCHAR"
					value="#[flowVars.updatepasswordfunction]" />
				<db:out-param name="fncResult" type="CLOB" />
			</db:stored-procedure>
			<custom-transformer class="com.uia.transformer.ClobTransformer"
				doc:name="Java Transformer (oracle.sql.CLOB to String) " />

		</transactional>
        <flow-ref name="qnb_validateResultSub_Flow" doc:name="qnb_validateResultSub_Flow"/>
	</flow>
	<sub-flow name="qnb_validateResultSub_Flow">
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
		<set-variable variableName="validUser"
			value="#[json:call_update_pwd/Valid]" doc:name="validUser" />
		<choice doc:name="Choice">
			<when expression="#[flowVars.validUser == &quot;1&quot;]">
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"status": "success"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"status": "failure"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
	</sub-flow>


</mule>
